- hosts: all
  become: true
  gather_facts: true
  vars:  
    API_CIDR: 10.96.0.1
    POD_CIDR: 10.244.0.0/16
  tasks:
    - set_fact:
          POD_CIDR: "{{ POD_CIDR }}"
          kube_version: "1.17.0"
      tags: addworker

    - name: set hostname in /etc/hosts
      lineinfile:
        path: /etc/hosts
        regexp: '127.0.0.1'
        line: "127.0.0.1 localhost {{ ansible_hostname }}"
      tags: addworker

    - name: set hostname in /boot/user-data
      lineinfile:
        path: /boot/user-data
        regexp: 'hostname:'
        line: "hostname: {{ ansible_hostname }}"
      tags: addworker
      when: ansible_os_family == "Debian" and ansible_architecture == "armv7l"


    ## install repo's and keys
    - name: add kubeadm repo (RedHat/CentOS)
      yum_repository:
        name: kubernetes
        description: kubernetes
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        enabled: 1
        gpgcheck: 1
        repo_gpgcheck: 1
        gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      when: ansible_os_family == "RedHat"
      tags: addworker

    - name: get gpg key for debian/docker
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
      when: ansible_os_family == "Debian"
      tags: addworker

    - name: get gpg key for debian/kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      when: ansible_os_family == "Debian"
      tags: addworker

    - name: install https option for debian
      package: name=apt-transport-https state=present
      when: ansible_os_family == "Debian"
      tags: addworker

    # - name: install docker repo
    #   apt_repository:
    #     repo: deb [arch=armhf] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable
    #     state: present
    #   when: ansible_os_family == "Debian" and ansible_architecture == "armv7l"

    - name: install docker repo
      apt_repository:
        repo: deb https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable
        state: present
      when: ansible_os_family == "Debian" and ansible_architecture != "armv7l"
      tags: addworker

    - name: install k8s repo (kubernetes-xenial because of availability for both platforms)
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
      when: ansible_os_family == "Debian"
      tags: addworker

    - name: install bash (and update apt)
      apt:
        name: bash
        update_cache: yes
      ignore_errors: yes
      when: ansible_os_family == "Debian"

    ## Docker install
    - name: install docker (RedHat/CentOS)
      package: name=docker state=present
      when: ansible_os_family == "RedHat"
      tags: addworker

    - name: install docker (Ubuntu/Debian/Etc)
      package: name=docker-ce state=present
      when: ansible_os_family == "Debian"
      tags: addworker

    - name: start and enable docker
      service: name=docker state=started enabled=yes
      tags: addworker

    ## Kubelet
    - name: install kubelet
      apt: name="kubelet={{ kube_version }}-00" state=present
      when: ansible_os_family == "Debian"
      tags: addworker

    - name: install kubelet
      package: name=kubelet state=present
      when: ansible_os_family != "Debian"
      tags: addworker

    - name: start kubelet with daemon reload
      systemd: name=kubelet state=started daemon_reload=yes
      when: ansible_os_family == "RedHat"

    - name: start & enable kubelet
      service: name=kubelet state=started enabled=true
      tags: addworker

    ## Kubeadm
    - name: install kubeadm
      package: name="kubeadm={{ kube_version }}-00" state=present
      tags: addworker
      when: ansible_os_family == "Debian"
    
    - name: install kubeadm
      package: name="kubeadm-{{ kube_version }}" state=present
      tags: addworker
      when: ansible_os_family != "Debian"
    
    ## SElinux
    - name: disable selinux
      selinux: state=permissive policy=targeted
      when: ansible_os_family == "RedHat"
      tags: addworker

    - name: disable swap
      mount:
        fstype: swap
        path: swap
        state: absent
      tags: addworker

    - name: disable swap
      mount:
        fstype: swap
        path: none
        state: absent
      tags: addworker
      #when: ansible_os_family == "RedHat"

    - name: remove current swap
      shell: swapoff -a
      tags: addworker

    - name: enable net.bridge.bridge-nf-call-iptables
      sysctl: 
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        sysctl_set: yes
        state: present
        reload: yes
      tags: addworker

    - name: install open-iscsi
      apt: name="open-iscsi" state=present
      when: ansible_os_family == "Debian"
      tags: addworker

    - name: install iscsi-initiator-utils (RedHat/CentOS)
      package: name=iscsi-initiator-utils state=present
      when: ansible_os_family == "RedHat"
      tags: addworker

- hosts: masters
  become: true
  gather_facts: true
  tasks:
    - name: install kubectl
      package: name=kubectl state=present
    
    - name: fix kubectl config path
      lineinfile:
        path: /root/.profile
        regexp: '^export KUBECONFIG'
        line: export KUBECONFIG=/etc/kubernetes/admin.conf
        state: present

- hosts: all
  become: true
  gather_facts: true
  tasks:
    - set_fact: 
        ext_ip: "{{ ansible_eth0.ipv4.address }}"
        cacheable: true
      when: 
        - ansible_os_family == "Debian"
      tags: addworker

    - set_fact: 
        ext_ip: "{{ ansible_p1p4.ipv4.address }}"
        cacheable: true
      when: 
        - ansible_os_family == "RedHat"
      tags: addworker
    
    #Vagrant is most likely used when using virtualbox, which takes the first nic for outside communication
    - set_fact: 
        ext_ip: "{{ ansible_eth1.ipv4.address }}"
        cacheable: true
      when: 
        - ansible_virtualization_type == "virtualbox"
        - ansible_os_family == "Debian"
      tags: addworker

    - set_fact: 
        ext_ip: "{{ ansible_enp0s8.ipv4.address }}"
        cacheable: true
      when: 
        - ansible_virtualization_type == "virtualbox"
        - ansible_os_family == "RedHat"
      tags: addworker

    - name: fix internal ip for vagrant
      lineinfile:
        path: /etc/default/kubelet
        regexp: '^KUBELET_EXTRA_ARGS='
        line: KUBELET_EXTRA_ARGS=--node-ip={{ ext_ip }}
        state: present
      when: 
        - ansible_virtualization_type == "virtualbox"
      tags: addworker

    - name: restart kubelet (only needed when previous changed)
      systemd: name=kubelet state=restarted daemon_reload=yes
      when: 
        - ansible_virtualization_type == "virtualbox"
      tags: addworker

- hosts: masters
  become: true
  gather_facts: true
  tasks:
    - name: get images
      shell: kubeadm config images pull --kubernetes-version={{ kube_version }}
      register: result_pull
      retries: 3
      delay: 5
      until: result_pull is succeeded

- hosts: masters[0]
  become: true
  gather_facts: true
  tasks:
    - name: kubeadm init
      shell: kubeadm init \
                --node-name {{ ansible_nodename }} \
                --apiserver-advertise-address={{ ext_ip }} \
                --pod-network-cidr={{ POD_CIDR }} \
                --kubernetes-version={{ kube_version }} \
                --ignore-preflight-errors=SystemVerification
      register: kubeadm_result
      async: 1000
      poll: 0
      
    - name: search and replace
      replace:
        path: /etc/kubernetes/manifests/kube-apiserver.yaml
        regexp: '(\s+)failureThreshold: 8(\s+.*)?$'
        replace: '\1failureThreshold: 20\2'
      retries: 50
      delay: 10
      until: sed_result is succeeded
      register: sed_result

    - name: pause 10 sec
      pause:
        seconds: 10

    - name: kill api-server to restart
      shell: docker ps|grep k8s_kube-apiserver|awk {' print $1 '}|xargs docker kill
      retries: 5
      until: kill_result is succeeded
      register: kill_result
      when: sed_result is succeeded

    - name: 'kubeadm sync checker'
      async_status:
        jid: "{{ kubeadm_result.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 30
    
    # - debug:
    #     msg: "{{ kubeadm_result.stdout_lines[-1] }}"

## this needs to go seperate for additional hosts
- hosts: workers
  become: true
  gather_facts: yes
  tasks:
    - name: fetch token
      shell: kubeadm token create
      register: token_result
      delegate_to: "{{ groups['masters'] | first }}"
      tags: addworker   

    - name: fetch ca-cert-hash
      shell: openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'
      register: cacert_result
      delegate_to: "{{ groups['masters'] | first }}"
      tags: addworker

    - name: join cluster
      shell: kubeadm join {{ hostvars[groups['masters'][0]]['ansible_facts'].ext_ip }}:6443 \
              --node-name {{ ansible_nodename }} \
              --token {{ token_result.stdout_lines[0] }} \
              --discovery-token-ca-cert-hash sha256:{{ cacert_result.stdout_lines[0] }} \
              --ignore-preflight-errors=SystemVerification
      tags: addworker

    - name: remove token
      shell: kubeadm token delete {{ token_result.stdout_lines[0] }}
      delegate_to: "{{ groups['masters'] | first }}"
      tags: addworker

- hosts: masters[0]
  become: true
  gather_facts: yes
  tasks:
    - name: install flannel
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
      environment: 
        KUBECONFIG: /etc/kubernetes/admin.conf
      args:
        executable: /bin/bash

    # - name: install traeffik
    #   shell: "kubectl apply -f {{ item }}"
    #   environment: 
    #     KUBECONFIG: /etc/kubernetes/admin.conf
    #   args:
    #     executable: /bin/bash
    #   loop:
    #     - "https://raw.githubusercontent.com/containous/traefik/master/examples/k8s/traefik-rbac.yaml"
    #     - "https://raw.githubusercontent.com/containous/traefik/master/examples/k8s/traefik-ds.yaml"


